INFORMATION:
    - no input validation.
    - runs two simulations.
    - first takes random numbers (1 to 3), numbers represent people
    - adds random numbers (people) to two seperate queues for each simulation
    - both queues are identical
    - arrays are used to keep track of total and current time, size of the array represents counters at the airport
    - simulation goes through a loop to dequeue people while keeping track of current and total time
    - checks to see which simulation was faster

TESTS:                                                                      RESULTS:                 FIX:
    1) If dequeue function is called on an empty list     ->    seg fault                       ->    check for empty list
    2) If destroy function is called more than once       ->    program crashes                 ->    destroy and exit together
    3) If the integers entered are too big or too small   ->    overflow                        ->    can't take too big or too small numbers
    4) If any function is sent a bad pionter              ->    seg faults                      ->    keep track of pointers
    5) Checking for memory leaks using Valgrind           ->    no leaks found                  ->    no fix needed
    6) If double or float is sent                         ->    number truncated                ->    cannot take decimals, send only int
    7) If characters are put into the input menu          ->    runs anyway, does nothing       ->    check for characters, let user know
    8) If "enter" is put in                               ->    does nothing, waits for input   ->    scanf ignores new line, let user know
    9) If negative numbers are put in                     ->    runs anyway, does nothing       ->    check for negatives, let user know
    
EXTRA NOTES:
    1) I did not have createQueue as an option in main because then I would have to keep track of more than one list.
